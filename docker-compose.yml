version: "3.9"  # optional since v1.27.0
services:
  backend:
    container_name: backend
    build:
      context: ./backend
    working_dir: /app/app
    volumes:
      - ./backend:/app
    ports:
      - "80:80"
    # command: uvicorn server:app --host 0.0.0.0 --port 80 --reload
    command: gunicorn server:app --workers 1 --worker-class uvicorn.workers.UvicornWorker --bind 0.0.0.0:80 --keep-alive 30
    extra_hosts:
      - "host.docker.internal:host-gateway"
    environment:
     - MINIO_ENDPOINT=minio:9000
     - MINIO_ROOT_USER=minio
     - MINIO_ROOT_PASSWORD=minio123
    depends_on:
      localstack:
        condition: service_healthy

  localstack:
    container_name: "${LOCALSTACK_DOCKER_NAME-localstack_main}"
    image: localstack/localstack
    ports:
      - "4566:4566"            # LocalStack Gateway
      - "4510-4559:4510-4559"  # external services port range
    environment:
      - DOCKER_HOST=unix:///var/run/docker.sock
    volumes:
      - "${LOCALSTACK_VOLUME_DIR:-./volume}:/var/lib/localstack"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - ./infra:/infra
      - ./init-aws.sh:/etc/localstack/init/ready.d/init-aws.sh
      - ./lambda:/lambda
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: "curl --silent --fail localstack:4566/_localstack/health | grep '\"s3\": \"running\"' | grep '\"sqs\": \"running\"'"
      interval: 20s
      retries: 5
      start_period: 20s
      timeout: 10s

  frontend:
    container_name: frontend
    build:
      context: ./frontend
    working_dir: /app/app
    depends_on:
      - backend
    volumes:
      - './frontend:/app'
    ports:
      - "8501:8501"
    command: streamlit run Home.py
    extra_hosts:
    - "host.docker.internal:host-gateway"